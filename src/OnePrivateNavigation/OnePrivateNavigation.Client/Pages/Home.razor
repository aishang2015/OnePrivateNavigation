@page "/"
@rendermode InteractiveAuto
@using System
@using OnePrivateNavigation.Common.Models
@using OnePrivateNavigation.Common.Models.Category
@using OnePrivateNavigation.Common.Models.Website
@using System.Net.Http.Json
@using Microsoft.JSInterop

@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<PageTitle>OnePrivateNavigation</PageTitle>

<div class="container">
    <!-- 顶部日期时间显示 -->
    <div class="time-display">
        <div class="date">@DateTime.Now.ToString("yyyy年MM月dd日")</div>
        <div class="time">@DateTime.Now.ToString("HH:mm:ss")</div>
    </div>

    <!-- 搜索条 -->
    <div class="search-container">
        <div class="search-box">
            <input type="text" @bind="_searchText" @bind:event="oninput" @onkeydown="HandleKeyDown" placeholder="输入关键词搜索..." />
            <button class="search-button" @onclick="HandleSearch">
                <MudIcon Icon="@Icons.Material.Filled.Search" />
            </button>
        </div>
    </div>

    <!-- 网站导航分组 -->
    <div class="nav-grid">
        @foreach (var category in _categories ?? new())
        {
            <div class="nav-card">
                <div class="nav-card-header">
                    <h2>@category.Name</h2>
                </div>
                <div class="nav-card-content">
                    <div class="site-grid">
                        @foreach (var site in _websites?.Where(s => s.CategoryId == category.Id) ?? Array.Empty<WebsiteResponse>())
                        {
                            <button class="site-button" @onclick="@(() => NavigateToSite(site.Url))">
                                @if (!string.IsNullOrEmpty(site?.Icon))
                                {
                                    <img src="@(NavigationManager.BaseUri + site.Icon.Substring(1))" class="site-icon" />
                                }
                                else
                                {
                                    <img src="favicon.png" class="site-icon" />
                                }
                                <span class="two-line-ellipsis">@site.Title</span>
                            </button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private string _searchText = "";
    private List<CategoryResponse>? _categories = new();
    private List<WebsiteResponse>? _websites = new();
    private System.Threading.Timer? _timer;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();

        // 启动定时器更新时间（每秒更新一次）
        _timer = new System.Threading.Timer(_ =>
        {
            InvokeAsync(StateHasChanged);
        }, null, 0, 1000);
    }

    public void Dispose()
    {
        _timer?.Dispose();
    }

    private async Task LoadData()
    {
        using var http = new HttpClient();

        var categoriesResponse = await http.GetFromJsonAsync<ApiResponse<List<CategoryResponse>>>(NavigationManager.BaseUri + "api/Category");
        _categories = categoriesResponse?.Data?.Where(c => c.IsVisible).ToList();

        var websitesResponse = await http.GetFromJsonAsync<ApiResponse<List<WebsiteResponse>>>(NavigationManager.BaseUri + "api/Website");
        _websites = websitesResponse?.Data?.Where(c => c.IsVisible).ToList();
    }

    private void HandleSearch()
    {
        if (!string.IsNullOrWhiteSpace(_searchText))
        {
            // 默认使用百度搜索
            string searchUrl = $"https://www.baidu.com/s?wd={Uri.EscapeDataString(_searchText)}";
            _jsRuntime.InvokeVoidAsync("open", searchUrl, "_blank");
        }
    }

    private void HandleKeyDown(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
        {
            HandleSearch();
        }
    }

    private void NavigateToSite(string url)
    {
        _jsRuntime.InvokeVoidAsync("open", url, "_blank");
    }


}
